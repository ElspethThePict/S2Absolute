// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Super Spark Object
// Script Author: Christan Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 31 : TYPE_SUPERSPARK
private alias object.value21 : star.angle
private alias object.value22 : star.timer



// Static Values

// Tables
private table image.xpos
	0, 0, 0, 0, 0, 0, 0, 0
end table

private table image.ypos
	0, 0, 0, 0, 0, 0, 0, 0
end table

event ObjectMain
	switch object.propertyValue
		case 0
			object.xpos = object[-playerCount].xpos
			object.ypos = object[-playerCount].ypos
		case 1
			switch object.state
			case 0
				if object[-playerCount].value42 == 0
					temp0 = object[-playerCount].speed
					Abs(temp0)
					if temp0 >= 0x80000
						object.drawOrder = -1
						object.value0 = 0
						object.frame = 0
						object.state++
					end if
				end if
				break
			case 1
				object.value0++
				if object.value0 >= 3
					object.value0 = 1
					object.frame++
					if object.frame >= 2
						object.state++
					end if
				end if
				break
			case 2
				object.value0++
				if object.value0 >= 3
					object.value0 = 1
					object.frame--
					if object.frame <= 0
						object.state++
					end if
				end if
				break
			case 3
				object.value0++
				if object.value0 >= 3
					object.value0 = 9
					object.state++
				end if
				break
			case 4
				if object.propertyValue == 1
					object.type = TypeName[Blank Object]
				end if
				object.value0++
				if object.value0 >= 13
					temp0 = object[-playerCount].speed
					Abs(temp0)
					CheckLower(temp0, 0x80000)
					temp0 = checkResult
					CheckEqual(object[-playerCount].value42, 0)
					temp0 &= checkResult
					CheckEqual(object[-playerCount].state, PlayerObject_KnuxWallClimb)
					temp0 |= checkResult
					if temp0 == 1
						object.state = 0
					else
						object.value0 = 0
						CreateTempObject(TypeName[Super Spark], 1, object[-playerCount].xpos, object[-playerCount].ypos)
						object[tempObjectPos].frame = 0
						object[tempObjectPos].state = 1
						object[tempObjectPos].drawOrder = object[-playerCount].value18
					end if
				end if
				break
			end switch
			break
		case 2 //AfterImages			
			//Store current position
			object.value1++
			object.value1 &= 7
			SetTableValue(object[-playerCount].xpos, object.value1, image.xpos)
			SetTableValue(object[-playerCount].ypos, object.value1, image.ypos)
			
			if object.state == 0
				object.drawOrder = -1
				object.inkEffect = INK_ALPHA
				object.state++
			end if
			if stage.playerListPos == 0
				if star.timer < 4
					CreateTempObject(TypeName[Super Spark], 3, object[0].xpos, object[0].ypos)
					object[tempObjectPos].direction = object[0].direction
					object[tempObjectPos].direction &= FLIP_X
					object[tempObjectPos].angle = star.angle
					object[tempObjectPos].drawOrder = object[0].value18
					object[tempObjectPos].inkEffect = INK_ALPHA
					object[tempObjectPos].alpha = 255
					star.angle += 0x40
				else
					star.angle += 0x30
				end if
				star.angle &= 255
				star.timer++
				star.timer %= 6
			end if
			break
		case 3
			object.frame++
			if object.frame > 5
				ResetObjectEntity(object.entityPos, TypeName[Blank Object], 0, object.xpos, object.ypos)
			else
				cos256(temp0, object.angle)
				sin256(temp1, object.angle)
				temp0 <<= 11
				temp1 <<= 11
				if object.direction == FLIP_X
					FlipSign(temp0)
				end if
				object.angle += 0x10
				object.angle &= 255
				object.value30 += temp0
				object.value31 += temp1	
				
				object.xpos = object[0].xpos
				object.ypos = object[0].ypos
				object.xpos += object.value30
				object.ypos += object.value31
			end if
			break
	end switch
end event


event ObjectDraw
	switch object.propertyValue
		case 0
		case 1
			switch object.state
			case 1
			case 2
			case 3
				DrawSprite(object.frame)
				break
			end switch
			break
		case 2
			//Get sprite
			
			switch stage.playerListPos
				case 0
					LoadAnimation("SuperSonic.ani")
					break
				case 1
					LoadAnimation("Tails.ani")
					break
				case 2
					LoadAnimation("Knuckles.ani")
					break
				default
					break
			end switch
			
			object.animation = object[-playerCount].animation
			object.frame = object[-playerCount].frame
			object.direction = object[-playerCount].direction
			if object.animation == ANI_TWIRL //ANI_TWIRL dows funny tricks with rotation
				object.rotation = object[-playerCount].rotation
			else
				object.rotation = object[-playerCount].value24
			end if
			
			if stage.playerListPos == 0
				if object[-playerCount].value15 >= 21
					object.animation = ANI_GLIDING
					object.frame = object[-playerCount].value44
				end if
			end if

			if object[0].type != TypeName[Debug Mode]
				temp0 = object.value1
				temp0 -= 6
				if temp0 < 0
					temp0 += 8
				end if			
				GetTableValue(object.xpos, temp0, image.xpos)
				GetTableValue(object.ypos, temp0, image.ypos)
				object.alpha = 96
				DrawObjectAnimation()
				
				temp0 += 2
				temp0 &= 7
				GetTableValue(object.xpos, temp0, image.xpos)
				GetTableValue(object.ypos, temp0, image.ypos)
				object.alpha = 128
				DrawObjectAnimation()
				
				temp0 += 2
				temp0 &= 7
				GetTableValue(object.xpos, temp0, image.xpos)
				GetTableValue(object.ypos, temp0, image.ypos)
				object.alpha = 160
				DrawObjectAnimation()		
				
				GetTableValue(object.xpos, object.value1, image.xpos)
				GetTableValue(object.ypos, object.value1, image.ypos)
				object.alpha = 255
				DrawObjectAnimation()
			end if
			break
		case 3
			temp0 = object.frame
			temp0 >>= 1
			temp0 += 3
			
			
			DrawSpriteFX(temp0, FX_INK, object.xpos, object.ypos)
			object.alpha -= 22
			break
	end switch
end event


event ObjectStartup
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-8, -8, 16, 16, 200, 33)
	SpriteFrame(-16, -16, 32, 32, 223, 116)
	SpriteFrame(-24, -24, 48, 48, 207, 149)
	SpriteFrame(-6, -6, 11, 11, 363, 99)
	SpriteFrame(-8, -8, 15, 15, 363, 83)
	SpriteFrame(-16, -16, 31, 31, 363, 50)
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
